# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "mechanotrack"
dynamic = ["version"]
description = "Tracking mechanical properties over time."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Kevin Yamauchi", email = "kevin.yamauchi@gmail.com" }]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
# add your package dependencies here
dependencies = []

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
# add dependencies for "extra" features here.  Not dev dependencies.
# [project.optional-dependencies]
# name = ["dependency"]

[project.urls]
homepage = "https://github.com/kevinyamauchi/mechanotrack"
repository = "https://github.com/kevinyamauchi/mechanotrack"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# same as console_scripts entry point
# [project.scripts]
# mechanotrack-cli = "mechanotrack:main_cli"

# [project.entry-points."some.group"]
# tomatoes = "mechanotrack:main_tomatoes"

# https://peps.python.org/pep-0735/
# setup with `uv sync` or `pip install -e . --group dev`
[dependency-groups]
test = ["pytest", "pytest-cov"]
dev = [
    { include-group = "test" },
    "ipython",
    "pdbpp",  # https://github.com/pdbpp/pdbpp
    "pre-commit-uv",
    "rich",  # https://github.com/Textualize/rich
    "ruff",
]

[tool.uv.sources]
mechanotrack = { workspace = true }

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src"]
fix = true
# unsafe-fixes = true

[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TC",   # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]
"docs/*.py" = ["D", "A"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false  # default is false

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "raise AssertionError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["mechanotrack"]

# https://github.com/mgedmin/check-manifest#configuration
# add files that you want check-manifest to explicitly ignore here
# (files that are in the repo but shouldn't go in the package)
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    "uv.lock",
]

# https://github.com/crate-ci/typos/blob/master/docs/reference.md
[tool.typos.default]
extend-ignore-identifiers-re = []
